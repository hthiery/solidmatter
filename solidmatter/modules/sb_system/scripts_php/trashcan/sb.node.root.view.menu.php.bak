<?php

import('sb.node.view');
//import('sb.dom.menu');

class sbView_root_menu extends sbView {
	
	public function execute($sAction) {
		
		global $_SBSESSION;
		
		if (isset($_GET['open'])) {
			$_SBSESSION->aData['menu']['expanded'][$_GET['open']] = TRUE;
		}
		if (isset($_GET['close'])) {
			unset($_SBSESSION->aData['menu']['expanded'][$_GET['close']]);
		}
		$sQuery = '/';
		if (isset($_GET['subjectnode'])) {
			$sQuery = $_GET['subjectnode'];
		}
		
		$nodeCurrentRoot = NodeFactory::getInstance($sQuery);
		$elemCurrentRoot = $nodeCurrentRoot->getSubject()->cloneNode();
		
		// check if node is linked
		$sPrimary = 'TRUE';
		if (substr_count($sQuery, '/') > 1) {
			$sParentPath = substr($sQuery, 0, strrpos($sQuery, '/'));
			$nodePathParent = NodeFactory::getInstance($sParentPath);
			$nodeRealParent = $nodeCurrentRoot->getParent();
			if (!$nodePathParent->isSame($nodeRealParent)) {
				$sPrimary = 'FALSE';
			}
		}
		$elemCurrentRoot->setAttribute('primary', $sPrimary);
		
		//echo $sQuery.'|'.$nodeCurrentRoot->getPath().'<br/>';
		
		
		if ($sQuery == '/') {
			$elemCurrentRoot->setAttribute('mode', 'tree_root');
			$elemCurrentRoot->setAttribute('path', $sQuery);
			$sQuery = '';
		}
		if ($sQuery == '' || isset($_SBSESSION->aData['menu']['expanded'][$sQuery])) {
			$aChildren = $nodeCurrentRoot->loadChildren('tree', FALSE, TRUE, TRUE);
			foreach($aChildren as $aChild) {
				$this->expand($aChild, $elemCurrentRoot, $sQuery);
			}
		}
		
		$_RESPONSE = ResponseFactory::getInstance('global');
		$_RESPONSE->addData($elemCurrentRoot, 'menu');
		
		return (NULL);
		
	}
	
	private function expand($aChild, $elemParent, $sPath) {
		
		$sCurrentPath = $sPath.'/'.$aChild['s_name'];
		
		$elemChild = ResponseFactory::createElement('sbnode');
		$elemChild->setAttribute('uuid', $aChild['uuid']);
		$elemChild->setAttribute('path', $sCurrentPath);
		$elemChild->setAttribute('nodetype', $aChild['fk_nodetype']);
		$elemChild->setAttribute('name', $aChild['s_name']);
		$elemChild->setAttribute('label', $aChild['s_label']);
		$elemChild->setAttribute('subnodes', $aChild['n_numsubnodes']);
		$elemChild->setAttribute('primary', $aChild['b_primary']);
		$elemChild->setAttribute('csstype', $aChild['s_csstype']);
		if (isset($aChild['s_customcsstype']) && $aChild['s_customcsstype'] != NULL) {
			$elemChild->setAttribute('csstype', $aChild['s_customcsstype']);
		}
		$elemParent->appendChild($elemChild);
		//echo $sCurrentPath;
		global $_SBSESSION;
		if (isset($_SBSESSION->aData['menu']['expanded'][$sCurrentPath])) {
			
			$elemCurrent = NodeFactory::getInstance($sCurrentPath);
			$aChildren = $elemCurrent->loadChildren('tree', FALSE, TRUE, TRUE);
			
			foreach($aChildren as $aChild) {
				$this->expand($aChild, $elemChild, $sCurrentPath);
			}
		}
		
	}
	
	
	
}


?>